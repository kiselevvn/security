version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: security
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  web:
    build: .
    command: sh -c "
      python ./backend/manage.py collectstatic --noinput &&
      python ./backend/manage.py migrate &&
      gunicorn --workers 3 --timeout 600 --chdir ./backend main.wsgi:application -b 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/public/static
      - media_volume:/app/public/media
    expose:
      - "8000"
    depends_on:
      - db
    environment:
      - DEBUG=${DEBUG}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/public/static
      - media_volume:/app/public/media
      - certs:/etc/letsencrypt
      - certs-data:/data/letsencrypt
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    volumes:
      - certs:/etc/letsencrypt
      - certs-data:/data/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  certs-data: